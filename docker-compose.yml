services:
  loadbalander:
    build:
      context: ./loadBalancer
      dockerfile: Dockerfile
    ports:
      - "9099:5000"
    networks:
      loadbalancer_network:
        aliases:
          - load-balancer
  db:
    user: root
    image: postgres
    container_name: postgres
    restart: unless-stopped
    ports:
      - "5432:5432"

    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - PGUSER=postgres

    volumes:
      - ./db/latest.sql:/docker-entrypoint-initdb.d/latest.sql

    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "db_prod"]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    networks:
        loadbalancer_network:
  
  redis:
    image: redis:6.0.9
    restart: always
    ports:
      - "6379:6379"
    expose:
      - 6379
    healthcheck:
      test: [ "CMD", "redis-cli", "-h", "localhost", "ping" ]
      interval: 1m
      timeout: 5s
    networks:
        loadbalancer_network:
          aliases:
            - redis

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "
             (celery -A core worker -l info -B &) && python manage.py runserver 0.0.0.0:8000"

    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
      - DB_HOST=db
      - DJANGO_SUPERUSER_EMAIL=admin@admin.com
      - DJANGO_SUPERUSER_PASSWORD=admin

    ports:
      - "8000:8000"
      - "587:587"

    volumes:
      - .:/app/

    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy

    networks:
        loadbalancer_network:
          aliases:
            - backend1

  backend2:
    build:
      context: .
      dockerfile: Dockerfile
    command: >
      sh -c "
            python manage.py runserver 0.0.0.0:8001"

    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
      - DB_HOST=db
      - DJANGO_SUPERUSER_EMAIL=admin2@admin.com
      - DJANGO_SUPERUSER_PASSWORD=admin2

    ports:
      - "8001:8001"

    volumes:
      - .:/app/

    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy

    networks:
        loadbalancer_network:
          aliases:
            - backend2


networks:
  loadbalancer_network:
    name:  load_balancer_net
    driver: bridge
    ipam:
      driver: default